D3 = mean(as.numeric(gsub(",","",D3))),
D4 = mean(as.numeric(gsub(",","",D4)))),
by = .(County, countyFIPS, year, date)] %>%
.[,.(None = sum(None),
Abnormal = sum(D0),
Moderate =sum(D1),
Severe  = sum(D2),
Extreme = sum(D3),
Exceptional = sum(D4)),
by=.(County, countyFIPS, year)] %>%
fwrite("R:/ClimateExposures/DM18.csv")
dmFile[, `:=` (countyFIPS = as.integer(substr(FIPS, 2,4)),
year = as.integer(substr(MapDate, 1, 4)),
date = as.Date(as.character(MapDate), "%Y%m%d"))] %>%
.[, .(None = mean(as.numeric(gsub(",","",None))),
D0 = mean(as.numeric(gsub(",","",D0))),
D1 = mean(as.numeric(gsub(",","",D1))),
D2 = mean(as.numeric(gsub(",","",D2))),
D3 = mean(as.numeric(gsub(",","",D3))),
D4 = mean(as.numeric(gsub(",","",D4)))),
by = .(County, countyFIPS, year, date)] %>%
.[,.(None = sum(None),
Abnormal = sum(D0),
Moderate =sum(D1),
Severe  = sum(D2),
Extreme = sum(D3),
Exceptional = sum(D4)),
by=.(County, countyFIPS, year)] %>%
fwrite("R:/ClimateExposures/DMAnnual.csv")
DM <- fread("DMAnnual.csv")
dmFile[, `:=` (countyFIPS = as.integer(substr(FIPS, 2,4)),
year = as.integer(substr(MapDate, 1, 4)),
date = as.Date(as.character(MapDate), "%Y%m%d"))] %>%
.[, .(None = mean(as.numeric(gsub(",","",None))),
D0 = mean(as.numeric(gsub(",","",D0))),
D1 = mean(as.numeric(gsub(",","",D1))),
D2 = mean(as.numeric(gsub(",","",D2))),
D3 = mean(as.numeric(gsub(",","",D3))),
D4 = mean(as.numeric(gsub(",","",D4)))),
by = .(County, countyFIPS, year, date)] %>%
fwrite("R:/ClimateExposures/DM00-18.csv")
foo <-  dmFile[, `:=` (countyFIPS = as.integer(substr(FIPS, 2,4)),
year = as.integer(substr(MapDate, 1, 4)),
date = as.Date(as.character(MapDate), "%Y%m%d"))] %>%
.[, .(None = mean(as.numeric(gsub(",","",None))),
D0 = mean(as.numeric(gsub(",","",D0))),
D1 = mean(as.numeric(gsub(",","",D1))),
D2 = mean(as.numeric(gsub(",","",D2))),
D3 = mean(as.numeric(gsub(",","",D3))),
D4 = mean(as.numeric(gsub(",","",D4)))),
by = .(County, countyFIPS, year, date)]
foo
foo %>% melt.data.table(id.vars = County, date, countyFIPS, year, variable.name = "DroughtClass", value.name = "persons")
foo %>% melt.data.table(id.vars = c("County", "date", "countyFIPS", "year"), variable.name = "DroughtClass", value.name = "persons")
foo %>% melt.data.table(id.vars = c("County", "date", "countyFIPS", "year"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot() + geom_area(aes(x=date, y = persons, fill= droughtClass))
foo %>% melt.data.table(id.vars = c("County", "date", "countyFIPS", "year"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot() + geom_area(aes(x=date, y = persons, fill= droughtClass), stat = "identity", position = "dodge")
foo %>% melt.data.table(id.vars = c("County", "date", "countyFIPS", "year"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot() + geom_area(aes(x=date, y = persons, fill= droughtClass), stat = "identity", position = "stack")
foo %>% melt.data.table(id.vars = c("County", "date", "countyFIPS", "year"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot() + geom_area(aes(x=date, y = persons, fill= droughtClass), stat = "identity", position = "stack")
foo %>% melt.data.table(id.vars = c("County", "date", "countyFIPS", "year"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot(aes(x=date, y = persons, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
foo %>% melt.data.table(id.vars = c("date"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot(aes(x=date, y = persons, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
foo %>% melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons")
foo
foo %>% melt.data.table(id.vars = c("date"), measure.vars = c("None", "D0", "D1", "D2", "D3", "D4"), variable.name = "droughtClass", value.name = "persons") %>%
ggplot(aes(x=date, y = persons, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
?geom_area
foo %>% melt.data.table(id.vars = c("date"), measure.vars = c("None", "D0", "D1", "D2", "D3", "D4"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)]
foo %>% melt.data.table(id.vars = c("date"), measure.vars = c("None", "D0", "D1", "D2", "D3", "D4"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>%
ggplot(aes(x=date, y = persons, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
dmFile[, `:=` (countyFIPS = as.integer(substr(FIPS, 2,4)),
year = as.integer(substr(MapDate, 1, 4)),
date = as.Date(as.character(MapDate), "%Y%m%d"))] %>%
.[, .(None = mean(as.numeric(gsub(",","",None))),
Abnormal = mean(as.numeric(gsub(",","",D0))),
Moderate = mean(as.numeric(gsub(",","",D1))),
Severe = mean(as.numeric(gsub(",","",D2))),
Extreme = mean(as.numeric(gsub(",","",D3))),
Exceptional = mean(as.numeric(gsub(",","",D4)))),
by = .(County, countyFIPS, year, date)] %>%
fwrite("R:/ClimateExposures/DM00-18.csv")
fread("R:/ClimateExposures/DM00-18.csv") %>%
.[,.(None = sum(None),
Abnormal = sum(Abnormal),
Moderate =sum(Moderate),
Severe  = sum(Severe),
Extreme = sum(Extreme),
Exceptional = sum(Exceptional)),
by=.(County, countyFIPS, year)] %>%
fwrite("R:/ClimateExposures/DMAnnual.csv")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>%
ggplot(aes(x=date, y = persons, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)]
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>%
ggplot(aes(x=date, y = persons, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)]
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% str()
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,as.Date(date)]
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)]
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c"Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack")
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#0066CC", "#3399FF", "#00CCFF", "#FFCC00", "FF6600", "CC0000"))
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack") +
scale_fill_manual(values = c("navy", "blue", "green", "yellow", "orange", "red"))
fread("R:/ClimateExposures/DM00-18.csv") %>%
melt.data.table(id.vars = c("date"), measure.vars = c("None", "Abnormal", "Moderate", "Severe", "Extreme", "Exceptional"), variable.name = "droughtClass", value.name = "persons") %>%
.[, .(persons = sum(persons)), by = .(date, droughtClass)] %>% .[,date := as.Date(date)] %>%
ggplot(aes(x=date, y = persons/1000000, fill= droughtClass)) + geom_area(stat = "identity", position = "stack") +
scale_fill_manual(values = c("navy", "blue", "sky blue", "yellow", "orange", "red"))
fread("R:/ClimateExposures/DM00-18.csv")
fread("R:/ClimateExposures/DM00-18.csv")
setkey(drought, date,  countyFIPS)
library(sf); library(raster)
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
fac
head(fac)
head(fac)
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
head(fac)
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
head(fac)
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
head(fac)
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
head(fac)
?st_coordinates
fac_sp <- st_as_sf(fac, coords = c("Longitude", "Latitude "), crs = 4326)
fac_sp <- st_as_sf(fac, coords = c("Longitude", "Latitude"), crs = 4326)
fac_sp
fac
fac_sp
# view that object
plot(fac_sp)
?sf::plot
# view that object
plot(fac_sp, axes = T)
raster::raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
raster <- raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
raster
plot(raster)
?`extract,Raster,data.frame-method`
dimaq2016 <- raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
plot(dimaq2016)
raster::extract(x = dimaq2016, y = FAC_SP)
raster::extract(x = dimaq2016, y = fac_sp
raster::extract(x = dimaq2016, y = fac_sp)
fac_sp$dimaq2016 <- raster::extract(x = dimaq2016, y = fac_sp)
fac_sp
dimaq2016 <- raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
fac_sp$dimaq2016 <- extract(x = dimaq2016, y = fac_sp)
extract(x = dimaq2016, y = fac_sp)
library(sf); library(raster)
# read in the facilities csv
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
# view the facilities table
head(fac)
# turn the table into a spatial object
fac_sp <- st_as_sf(fac, coords = c("Longitude", "Latitude"), crs = 4326)
# view that object
plot(fac_sp, axes = T)
# read in the raster
dimaq2016 <- raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
plot(dimaq2016)
extract(x = dimaq2016, y = fac_sp)
fac_sp$dimaq2016 <- extract(x = dimaq2016, y = fac_sp)
plot(fac_sp["dimaq2016"], axes=T)
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
extract(x = dimaq, y = fac_sp)
}
extractDIMAQ(2005)
extractDIMAQ("2015")
lapply(years, extractDIMAQ)
# define years
years <- list("2015","2016","2017")
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
extract(x = dimaq, y = fac_sp)
}
lapply(years, extractDIMAQ)
list <- lapply(years, extractDIMAQ)
extractions <- lapply(years, extractDIMAQ)
extractions
fac$year2015 <- extractions[1]
fac$year2016 <- extractions[2]
fac$year2015 <- extractions[1]
fac$year2016 <- extractions[2]
fac$year2017 <- extractions[3]
fac
fac$year2015 <- extractions[1][]
fac$year2016 <- extractions[2][]
fac$year2017 <- extractions[3][]
fac
fac$year2015 <- extractions[1]
extractions[1]
fac$year2015 <- as.vector(extractions[1])
fac
fac$year2015 <- flatten(extractions[1])
fac$year2015 <- unlist(extractions[1])
fac
fac$year2017 <- unlist(extractions[3])
# define the function which reads in the raster for a given year and does the extraction
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
unllist(extract(x = dimaq, y = fac_sp))
}
# define years
years <- list("2015","2016","2017")
extractions <- lapply(years, extractDIMAQ)
# define the function which reads in the raster for a given year and does the extraction
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
unlist(extract(x = dimaq, y = fac_sp))
}
# define years
years <- list("2015","2016","2017")
extractions <- lapply(years, extractDIMAQ)
extractions
fac$year2015 <- unlist(extractions[1])
fac$year2016 <- unlist(extractions[2])
fac$year2017 <- unlist(extractions[3])
fac
# create new variables for each year in the original
fac_sp$year2015 <- unlist(extractions[1])
fac_sp$year2016 <- unlist(extractions[2])
fac_sp$year2017 <- unlist(extractions[3])
fac_sp
# define the function which reads in the raster for a given year and does the extraction
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
extract(x = dimaq, y = fac_sp)
}
# define years
years <- list("2015","2016","2017")
# apply our new functino to each year in your list of years
extractions <- lapply(years, extractDIMAQ)
# it returns the result of each year's extraction as an entry in a list of the extractions
# create new variables for each year in the original
fac_sp$year2015 <- unlist(extractions[1])
fac_sp$year2016 <- unlist(extractions[2])
fac_sp$year2017 <- unlist(extractions[3])
fac_sp
plot(fac_sp[years])
plot(fac_sp[unlist(years)])
plot(fac_sp[c("2015","2016","2017"])
plot(fac_sp[c("2015","2016","2017")]
plot(fac_sp[c("2015","2016","2017")])
plot(fac_sp["2015","2016","2017"])
plot(fac_sp["year2015","year2016","year2017")])
plot(fac_sp[c("year2015","year2016","year2017")])
plot(fac_sp[c("year2015","year2016","year2017")], axes=T)
plot(fac_sp[c("year2015","year2016","year2017")], axes=T, legend=T)
?plot
plot(fac_sp[c("year2015","year2016","year2017")], axes=T, key.pos = 4)
plot(fac_sp[c("year2015","year2016","year2017")], axes=T, key.pos = 3)
p
p
plot(fac_sp[c("year2015","year2016","year2017")], axes=T, key.pos = 3)
plot(fac_sp[c("year2015","year2016","year2017")], axes=T, key.pos = 1)
fac_sp$geometry <- NULL
write.csv("F:/PM2.5_Data/Facilities_w_PM.csv")
write.csv(fac_sp, "F:/PM2.5_Data/Facilities_w_PM.csv")
library(sf); library(raster)
# read in the facilities csv
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
# view the facilities table
fac
# turn the table into a spatial object
fac_sp <- st_as_sf(fac, coords = c("Longitude", "Latitude"), crs = 4326)
# view that object
plot(fac_sp, axes = T)
# read in the raster
dimaq2016 <- raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
plot(dimaq2016)
extract(x = dimaq2016, y = fac_sp)
fac_sp$dimaq2016 <- extract(x = dimaq2016, y = fac_sp)
plot(fac_sp["dimaq2016"], axes=T)
# define the function which reads in the raster for a given year and does the extraction
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
extract(x = dimaq, y = fac_sp)
}
# define years
years <- list("2015","2016","2017")
# apply our new functino to each year in your list of years
extractions <- lapply(years, extractDIMAQ)
# it returns the result of each year's extraction as an entry in a list of the extractions
# create new variables for each year in the original
fac_sp$year2015 <- unlist(extractions[1])
fac_sp$year2016 <- unlist(extractions[2])
fac_sp$year2017 <- unlist(extractions[3])
fac_sp
plot(fac_sp[c("year2015","year2016","year2017")], axes=T, key.pos = 1, width = )
plot(fac_sp[c("year2015","year2016","year2017")], axes=T)
fac_sp$geometry <- NULL
write.csv(fac_sp, "F:/PM2.5_Data/Facilities_w_PM.csv")
library(sf); library(raster)
# read in the facilities csv
fac <- read.csv("F:/PM2.5_Data/Facilities.csv")
# view the facilities table
fac
# turn the table into a spatial object
fac_sp <- st_as_sf(fac, coords = c("Longitude", "Latitude"), crs = 4326)
# view that object
plot(fac_sp, axes = T)
# read in the raster
dimaq2016 <- raster("F:/PM2.5_Data/GBD2017_PM_2016.tif")
plot(dimaq2016)
extract(x = dimaq2016, y = fac_sp)
fac_sp$dimaq2016 <- extract(x = dimaq2016, y = fac_sp)
plot(fac_sp["dimaq2016"], axes=T)
# define the function which reads in the raster for a given year and does the extraction
extractDIMAQ <- function(year){
rasterName <- paste0("F:/PM2.5_Data/GBD2017_PM_",year,".tif")
dimaq <- raster(rasterName)
extract(x = dimaq, y = fac_sp)
}
# define years
years <- list("2015","2016","2017")
# apply our new functino to each year in your list of years
extractions <- lapply(years, extractDIMAQ)
# it returns the result of each year's extraction as an entry in a list of the extractions
# create new variables for each year in the original
fac_sp$year2015 <- unlist(extractions[1])
fac_sp$year2016 <- unlist(extractions[2])
fac_sp$year2017 <- unlist(extractions[3])
fac_sp
plot(fac_sp[c("year2015","year2016","year2017")], axes=T)
fac_sp$geometry <- NULL
write.csv(fac_sp, "F:/PM2.5_Data/Facilities_w_PM.csv")
# when combining several
rm(list = ls())
library(tidyverse)
library(sf)
library(data.table)
library(scales)
library(lubridate)
library(parallel)
library(ggiraph)
stateKey <- fread("~/GitHub/WFSmokeExp/stateKey.csv") %>%
mutate(charST = ifelse(stFIPS<10, paste0("0",stFIPS), as.character(stFIPS))) %>%
rename(STATEFP = stFIPS)
#
# BG_list <- lapply(stateKey$charST, function(x) paste0("https://www2.census.gov/geo/docs/reference/cenpop2010/blkgrp/CenPop2010_Mean_BG",x,".txt"))
#
# tableList <- lapply(BG_list, fread)
tableList <- fread("https://www2.census.gov/geo/docs/reference/cenpop2010/blkgrp/CenPop2010_Mean_BG.txt")
pop <- tableList[,.(totalPOP = sum(POPULATION)), by=.(STATEFP)] %>% merge(stateKey)
popCentroidsBG <- st_as_sf(tableList, coords = c("LONGITUDE", "LATITUDE"), crs = 4326)
directory <- "~/data/US_BG/RDS"
allBGs <- tableList[, geoIDer := paste0(STATEFP,"_",COUNTYFP,"_",TRACTCE,"_",BLKGRPCE)]
allBGs <- copy(allBGs)
setkey(allBGs, STATEFP, COUNTYFP, geoIDer)
smokeFile <- fread("~/data/smokeFile.csv")
setkey(smokeFile, date, STATEFP, COUNTYFP, TRACTCE, BLKGRPCE)
smokeFile <-copy(smokeFile)
start <- as.character(min(unique(smokeFile$date)))
end <- as.character(max(unique(smokeFile$date)))
shiny::runApp('GitHub/CDPHShiny/ClimateExposures')
runApp('GitHub/CDPHShiny/ClimateExposures')
shiny::runApp('GitHub/WFSmokeExp/MMWRdashboard')
runApp('GitHub/WFSmokeExp/MMWRdashboard')
runApp('GitHub/WFSmokeExp/MMWRdashboard')
library(tidyverse)
library(data.table)
library(sf)
library(parallel)
library(R.utils)
library(lwgeom)
library(RCurl)
file <- fread("~/GitHub/WFSmokeExp/MMWRdashboard/USsmokeFile.csv")
file <- fread("~/GitHub/WFSmokeExp/MMWRdashboard/USsmokeFile.csv")
file
file[, .(pop = mean(POPULATION)), by = .(STATEFP, COUNTYFP)]
file[, .(pop = mean(POPULATION)), by = .(STATEFP, COUNTYFP)]
library(tidyverse)
library(sf)
library(data.table)
library(scales)
library(lubridate)
library(parallel)
library(ggiraph)
stateKey <- fread("~/GitHub/WFSmokeExp/stateKey.csv") %>%
mutate(charST = ifelse(stFIPS<10, paste0("0",stFIPS), as.character(stFIPS))) %>%
rename(STATEFP = stFIPS)
directory <- "~/data/US_BG/RDS"
allBGs <- tableList[, geoIDer := paste0(STATEFP,"_",COUNTYFP,"_",TRACTCE,"_",BLKGRPCE)]
allBGs <- copy(allBGs)
setkey(allBGs, STATEFP, COUNTYFP, geoIDer)
smokeFile <- fread("~/data/smokeFile.csv")
setkey(smokeFile, date, STATEFP, COUNTYFP, TRACTCE, BLKGRPCE)
smokeFile <-copy(smokeFile)
start <- as.character(min(unique(smokeFile$date)))
end <- as.character(max(unique(smokeFile$date)))
smokeFile
file
runApp('GitHub/WFSmokeExp/MMWRdashboard')
class(file$medium)
class(file$light)
class(file$heavy)
runApp('GitHub/WFSmokeExp/MMWRdashboard')
file
l
file
runApp('GitHub/WFSmokeExp/MMWRdashboard')
file[, .(
l = ifelse(max(as.numeric(light)) > 0, 1, 0),
m = ifelse(max(as.numeric(medium)) > 0 , 1, 0),
h = ifelse(max(as.numeric(heavy)) > 0, 1, 0)
), by = date] %>%
na.omit() %>%
.[, .(
lightDays = sum(l, na.rm = T),
mediumDays = sum(m, na.rm = T),
heavyDays = sum(h, na.rm = T)
)]
runApp('GitHub/WFSmokeExp/MMWRdashboard')
file[, .(
l = ifelse(max(as.numeric(light)) > 0, 1, 0),
m = ifelse(max(as.numeric(medium)) > 0 , 1, 0),
h = ifelse(max(as.numeric(heavy)) > 0, 1, 0)
), by = date] %>%
na.omit() %>%
.[, .(
lightDays = sum(l, na.rm = T),
mediumDays = sum(m, na.rm = T),
heavyDays = sum(h, na.rm = T)
)]
file[, .(
l = ifelse(max(as.numeric(light)) > 0, 1, 0),
m = ifelse(max(as.numeric(medium)) > 0 , 1, 0),
h = ifelse(max(as.numeric(heavy)) > 0, 1, 0)
), by = date]
file[STATEFP == 6, .(
l = ifelse(max(as.numeric(light)) > 0, 1, 0),
m = ifelse(max(as.numeric(medium)) > 0 , 1, 0),
h = ifelse(max(as.numeric(heavy)) > 0, 1, 0)
), by = date] %>%
na.omit() %>%
.[, .(
lightDays = sum(l, na.rm = T),
mediumDays = sum(m, na.rm = T),
heavyDays = sum(h, na.rm = T)
)]
file[STATEFP == 6, .(
l = ifelse(max(as.numeric(light)) > 0, 1, 0),
m = ifelse(max(as.numeric(medium)) > 0 , 1, 0),
h = ifelse(max(as.numeric(heavy)) > 0, 1, 0)
), by = date]
file[, .(
l = ifelse(max(as.numeric(light)) > 0, 1, 0),
m = ifelse(max(as.numeric(medium)) > 0 , 1, 0),
h = ifelse(max(as.numeric(heavy)) > 0, 1, 0)
), by = date] %>%
na.omit() %>%
.[, .(
lightDays = sum(l, na.rm = T),
mediumDays = sum(m, na.rm = T),
heavyDays = sum(h, na.rm = T)
)]
runApp('GitHub/WFSmokeExp/MMWRdashboard')
