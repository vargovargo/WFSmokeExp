collapsible = T,
collapsed = T,
dateRangeInput(
inputId = "Time",
label = "Select Window",
min = as.Date(dateList[1]),
max = as.Date(dateList[length(dateList)]),
start = as.Date("20180701","%Y%m%d"),
end = as.Date("20180813"),
separator = " to ")
),
box(title = "Smoke Category",
collapsible = T,
collapsed = T,
radioButtons(
inputId = "Smoke",
label = "Smoke Density",
choices = c("Heavy", "Medium", "Light")
)
),
box(title = "Person-Days of Exposure by Race and Age Vulnerabilities",
plotOutput('VulnPlot')
)
)
),
# second Tab Content
tabItem(tabName = "back",
HTML("<h5>This data comes from the Nation Oceanic and Atmosphereic Administration's Office of Satellite and Product Operations. </h5>
<ul>
<li>The initial HMS product for the current day is created and updated by a satellite analyst roughly between 8am and 10am Eastern Time. After 10am, the analysis is fine-tuned as time permits as additional satellite data becomes available. Areas of smoke are analyzed and added to the analysis during daylight hours as visible satellite imagery becomes available. The product is finalized and 'completed' for the archive the following morning - generally by around 800am.</li>
<li>The fire sizes depicted in the product are primarily determined by the field of view of the satellite instrument, or the resolution of the analysis tool. They should not be used to estimate specific fire perimeters.</li>
<li>The ability to detect fires and smoke can be compromised by many factors, including cloud cover, tree canopy, terrain, the size of the fire or smoke plume, the time of the day, etc. The satellite sensors used to detect fires are sensitive to heat sources and reflected sunlight. Analysts do their best to distinguish between fires and other heat sources or highly reflective surfaces, such as factories, mines, gas flares, solar panels, clouds, etc. but some false detects do get included in the analysis.</li></ul> ")
))
))
as.Date("20180701","%Y%m%d")
runApp()
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/tractsSM.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/SmokeExposures/tractsSM.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
pal_l <- colorBin(palette =  "Reds",
bins = 7,
domain = na.exclude(foo2$light))
pal_m <- colorBin(palette =  "Reds",
bins = 7,
domain = na.exclude(foo2$medium))
pal_h <- colorBin(palette =  "Reds",
bins = 7,
domain = na.exclude(foo2$heavy))
mapTemp <- CAtracts %>% inner_join(foo2)
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal_l(light),
highlightOptions = highlightOptions(
color = "white",
weight = 2,
bringToFront = TRUE
),
popup = paste0(
"This tract has experienced ",
mapTemp$light,
" days (",
round(100 * mapTemp$light / 199, 1),
"%) of Light Smoke Exposure since Jan 29, 2018."
),
group = "Light Smoke"
) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal_m(medium),
highlightOptions = highlightOptions(
color = "white",
weight = 2,
bringToFront = TRUE
),
popup = paste0(
"This tract has experienced ",
mapTemp$medium,
" days (",
round(100 * mapTemp$medium / 199, 1),
"%) of Medium Smoke Exposure since Jan 29, 2018."
),
group = "Medium Smoke"
) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal_h(heavy),
highlightOptions = highlightOptions(
color = "white",
weight = 2,
bringToFront = TRUE
),
popup = paste0(
"This tract has experienced ",
mapTemp$heavy,
" days (",
round(100 * mapTemp$heavy / 199, 1),
"%) of Heavy Smoke Exposure since Jan 29, 2018."
),
group = "Heavy Smoke"
) %>%
addLayersControl(
baseGroups = c("Heavy Smoke", "Medium Smoke", "Light Smoke"),
options = layersControlOptions(collapsed = TRUE)
)
AllDays <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018.rds")
AllDays <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds")
head(AllDays)
foo <- AllDays %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup()
foo2 <- foo %>% spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
saveRDS(foo2,file = "~/GitHub/WFSmokeExp/SmokeExposures/Jan29ToAug152018_wide.rds")
View(foo2)
View(AllDays)
runApp()
names(AllDays)
runApp()
vuln <- inner_join(children, elderly) %>% gather(children, elderly, total, key = cohort, value = population) %>% saveRDS("~/GitHub/WFSmokeExp/SmokeExposures/vuln.rds")
children <- read.csv("~/CHVI_copy/data/tables/tracts/CHVI_children_tract.csv", header = T, stringsAsFactors = F) %>%
select(geotypv, numratr, denmntr, race) %>%
rename(ct10 = geotypv,
children = numratr,
total = denmntr)
elderly <- read.csv("~/CHVI_copy/data/tables/tracts/CHVI_elderly_tract.csv", header = T, stringsAsFactors = F) %>%
select(geotypv, numratr, denmntr, race) %>%
rename(ct10 = geotypv,
elderly = numratr,
total = denmntr)
vuln <- inner_join(children, elderly) %>% gather(children, elderly, total, key = cohort, value = population) %>% saveRDS("~/GitHub/WFSmokeExp/SmokeExposures/vuln.rds")
runApp()
vuln <- inner_join(children, elderly) %>% gather(children, elderly, total, key = cohort, value = population)
View(vuln)
inner_join(children, elderly)
vuln <- inner_join(children, elderly) %>%
mutate(total = total - children - elderly) %>%
gather(children, elderly, total, key = cohort, value = population) %>%
saveRDS("~/GitHub/WFSmokeExp/SmokeExposures/vuln.rds")
vuln <- inner_join(children, elderly) %>%
mutate(total = total - children - elderly) %>%
gather(children, elderly, total, key = cohort, value = population)
View(vuln)
inner_join(children, elderly) %>%
mutate(total = total - children - elderly)
vuln <- inner_join(children, elderly) %>%
mutate(other = total - children - elderly) %>%
gather(children, elderly, total, key = cohort, value = population) %>%
saveRDS("~/GitHub/WFSmokeExp/SmokeExposures/vuln.rds")
plot <- vuln %>%
inner_join({mutate(HMLwide, ct10 = as.numeric(ct10))}) %>%
mutate(lightPD = population * light,
mediumPD = population * medium,
heavyPD = population * heavy) %>%
filter(cohort != "total", race != "Total") %>%
group_by(cohort, race) %>%
summarize(Heavy = sum(heavyPD),
Medium = sum(mediumPD),
Light = sum(lightPD)) %>% ungroup() %>%
gather(Heavy, Medium, Light, key = SmokeDensity, value = PersonDays) %>%
mutate(SmokeDensity = factor(SmokeDensity, levels = c("Light","Medium","Heavy")))
plot %>% ggplot(aes(x=race, y= PersonDays, fill = cohort)) + geom_bar(stat="identity") + facet_grid(.~SmokeDensity~., scales="free_y")
plot <- vuln %>%
inner_join({mutate(HMLwide, ct10 = as.numeric(ct10))}) %>%
mutate(lightPD = population * light,
mediumPD = population * medium,
heavyPD = population * heavy) %>%
filter(cohort != "total", race != "Total") %>%
group_by(cohort, race) %>%
summarize(Heavy = sum(heavyPD),
Medium = sum(mediumPD),
Light = sum(lightPD)) %>% ungroup() %>%
gather(Heavy, Medium, Light, key = SmokeDensity, value = PersonDays) %>%
mutate(SmokeDensity = factor(SmokeDensity, levels = c("Light","Medium","Heavy")))
HMLwide <- AllData %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds")
HMLwide <- AllData %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/SmokeExposures/tractsSM.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
children <- read.csv("~/CHVI_copy/data/tables/tracts/CHVI_children_tract.csv", header = T, stringsAsFactors = F) %>%
select(geotypv, numratr, denmntr, race) %>%
rename(ct10 = geotypv,
children = numratr,
total = denmntr)
elderly <- read.csv("~/CHVI_copy/data/tables/tracts/CHVI_elderly_tract.csv", header = T, stringsAsFactors = F) %>%
select(geotypv, numratr, denmntr, race) %>%
rename(ct10 = geotypv,
elderly = numratr,
total = denmntr)
vuln <- inner_join(children, elderly) %>%
mutate(other = total - children - elderly) %>%
gather(children, elderly, total, key = cohort, value = population) %>%
saveRDS("~/GitHub/WFSmokeExp/SmokeExposures/vuln.rds")
vuln <- inner_join(children, elderly) %>%
mutate(other = total - children - elderly) %>%
gather(children, elderly, total, key = cohort, value = population)
plot <- vuln %>%
inner_join({mutate(HMLwide, ct10 = as.numeric(ct10))}) %>%
mutate(lightPD = population * light,
mediumPD = population * medium,
heavyPD = population * heavy) %>%
filter(cohort != "total", race != "Total") %>%
group_by(cohort, race) %>%
summarize(Heavy = sum(heavyPD),
Medium = sum(mediumPD),
Light = sum(lightPD)) %>% ungroup() %>%
gather(Heavy, Medium, Light, key = SmokeDensity, value = PersonDays) %>%
mutate(SmokeDensity = factor(SmokeDensity, levels = c("Light","Medium","Heavy")))
plot %>% ggplot(aes(x=race, y= PersonDays, fill = cohort)) + geom_bar(stat="identity") + facet_grid(.~SmokeDensity~., scales="free_y")
filter(vuln, cohort == "total") %>% sum(.$population)
filter(vuln, cohort == "total") %>% sum(population)
sum({
filter(vuln, cohort == "total") %>% select(population)
})
sum({
filter(vuln, cohort == "total") %>% select(population)
})/2
filter(vuln, cohort == "total" & race == Total) %>% select(population)
filter(vuln, cohort == "total" & race == "Total") %>% select(population)
sum({
filter(vuln, cohort == "total" & race == "Total") %>% select(population)
})
dateList <-
format(seq(as.Date("20180701"),as.Date("20180813"), by = "day"),"%Y%m%d")
dateList <-
format(seq(as.Date("20180701"),as.Date("20180813"), by = "day"),"%Y%m%d")
dateList <-
format(seq(as.Date("2018-07-01"),as.Date("2018-08-13"), by = "day"),"%Y%m%d")
AllData %>%
filter(date %in% dateList()) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
AllData %>%
filter(date %in% dateList %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
})
AllData %>%
filter(date %in% dateList) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
AllData %>%
filter(date %in% dateList)
AllData
View(AllData)
AllData %>%
filter(date %in% dateList)
AllData %>%
filter(date >= dateList[1] & date <= datelist[length(datelist)])
dateList <-
format(seq(as.Date("2018-07-01"),as.Date("2018-08-13"), by = "day"),"%Y%m%d")
AllData %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)])
runApp()
HMLwide <- reactive({
AllData %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)]) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
})
HMLwide <-
AllData %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)]) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
AllData %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)]) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date))
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds")
dateList <-
format(seq(as.Date("2018-07-01"),as.Date("2018-08-13"), by = "day"),"%Y%m%d")
HMLwide <-
AllData %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)])
View(HMLwide)
View(AllData)
dateList <- format(seq(as.Date("2018/01/29"),as.Date("2018/08/15"), by = "day"),"%Y%m%d")
datelist
dateList
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds")
unique(AllData$date)
View(AllData)
View(AllData)
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds") %>% mutate(date = paste0(year, month, day))
View(AllData)
dateList <-
format(seq(as.Date("2018-07-01"),as.Date("2018-08-13"), by = "day"),"%Y%m%d")
HMLwide <-
AllData %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)]) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
View(HMLwide)
runApp()
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds") %>%
mutate(date = as.Date(paste0(year, month, day), format = "%Y-%m-%d"))
View(AllData)
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds") %>%
mutate(date = as.Date(paste0(year, month, day)))
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds") %>%
mutate(date = paste0(year, month, day))
mutate(date = as.Date(paste0(year, month, day), format= "%Y%m%d")
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds") %>%
mutate(date = as.Date(paste0(year, month, day), format= "%Y%m%d"))
AllData <- readRDS(file = "~/GitHub/WFSmokeExp/Jan29ToAug152018_2.rds") %>%
mutate(date = as.Date(paste0(year, month, day), format= "%Y%m%d"))
View(AllData)
runApp()
rm(list = ls())
library(tidyverse)
library(sf)
dateList <- format(seq(as.Date("2018/08/13"),as.Date("2018/08/20"), by = "day"),"%Y%m%d")
# smokeFileZip <- "http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/GIS/ARCHIVE/hms_smoke20180808.zip"
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/tracts.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
dateList <- format(seq(as.Date("2018/08/13"),as.Date("2018/08/20"), by = "day"),"%Y%m%d")
# smokeFileZip <- "http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/GIS/ARCHIVE/hms_smoke20180808.zip"
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/tracts.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
smokeDay <- function(HMSday){
year <- substr(HMSday, 1,4)
month <- substr(HMSday, 5,6)
day <- substr(HMSday, 7,8)
smokeFileName <- paste0("http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/KML/ARCHIVE/smoke",HMSday,".kml")
layers <- st_layers(smokeFileName)$name
for(l in 1: length(layers)){
Smk <- st_read(dsn = smokeFileName, layer = layers[l]) %>%
mutate(date = sapply(str_split(Description, pattern = " "),"[",5),
time = sapply(str_split(Description, pattern = " "),"[",6),
year = year,
month = month,
day = day,
smoke = layers[l])
SmkLayerDayInt <- st_intersection(Smk, CAtracts)
st_geometry(SmkLayerDayInt) <- NULL
if(exists("singleDay")){
singleDay <- rbind(singleDay, SmkLayerDayInt)
}
else{
singleDay <- SmkLayerDayInt
}
}
return(singleDay)
}
dateList <- format(seq(as.Date("2018/08/13"),as.Date("2018/08/20"), by = "day"),"%Y%m%d")
# smokeFileZip <- "http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/GIS/ARCHIVE/hms_smoke20180808.zip"
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/tractsSM.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
smokeDay <- function(HMSday){
year <- substr(HMSday, 1,4)
month <- substr(HMSday, 5,6)
day <- substr(HMSday, 7,8)
smokeFileName <- paste0("http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/KML/ARCHIVE/smoke",HMSday,".kml")
layers <- st_layers(smokeFileName)$name
for(l in 1: length(layers)){
Smk <- st_read(dsn = smokeFileName, layer = layers[l]) %>%
mutate(date = sapply(str_split(Description, pattern = " "),"[",5),
time = sapply(str_split(Description, pattern = " "),"[",6),
year = year,
month = month,
day = day,
smoke = layers[l])
SmkLayerDayInt <- st_intersection(Smk, CAtracts)
st_geometry(SmkLayerDayInt) <- NULL
if(exists("singleDay")){
singleDay <- rbind(singleDay, SmkLayerDayInt)
}
else{
singleDay <- SmkLayerDayInt
}
}
return(singleDay)
}
# smokeFileZip <- "http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/GIS/ARCHIVE/hms_smoke20180808.zip"
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/SmokeExposures/tractsSM.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
for (day in dateList){
oneDay <- smokeDay(HMSday = day)
if(exists("AllDays")){
AllDays <- rbind(AllDays, oneDay)
}
else{
AllDays <- oneDay
}
}
View(AllDays)
rm(list = ls())
library(tidyverse)
library(sf)
dateList <- format(seq(as.Date("2018/08/13"),as.Date("2018/08/14"), by = "day"),"%Y%m%d")
# smokeFileZip <- "http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/GIS/ARCHIVE/hms_smoke20180808.zip"
CAtracts <-  st_read(dsn = "~/GitHub/WFSmokeExp/SmokeExposures/tractsSM.GeoJSON", stringsAsFactors = F) %>% st_transform(crs = 4326) %>%
mutate(COUNTYFI_1 = as.character(paste0(STATE, COUNTY)))
smokeDay <- function(HMSday){
year <- substr(HMSday, 1,4)
month <- substr(HMSday, 5,6)
day <- substr(HMSday, 7,8)
smokeFileName <- paste0("http://satepsanone.nesdis.noaa.gov/pub/FIRE/HMS/KML/ARCHIVE/smoke",HMSday,".kml")
layers <- st_layers(smokeFileName)$name
for(l in 1: length(layers)){
Smk <- st_read(dsn = smokeFileName, layer = layers[l]) %>%
mutate(time = sapply(str_split(Description, pattern = " "),"[",6),
year = year,
month = month,
day = day,
date = paste0(year, month, day),
smoke = layers[l])
SmkLayerDayInt <- st_intersection(Smk, CAtracts)
st_geometry(SmkLayerDayInt) <- NULL
if(exists("singleDay")){
singleDay <- rbind(singleDay, SmkLayerDayInt)
}
else{
singleDay <- SmkLayerDayInt
}
}
return(singleDay)
}
for (day in dateList){
oneDay <- smokeDay(HMSday = day)
if(exists("AllDays")){
AllDays <- rbind(AllDays, oneDay)
}
else{
AllDays <- oneDay
}
}
saveRDS(AllDays,file = "~/GitHub/WFSmokeExp/Aug13ToAug142018.rds")
HMLwide <-
AllDays %>%
filter(date >= dateList[1] & date <= dateList[length(dateList)]) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
View(HMLwide)
View(HMLwide)
HMLwide <-
AllDays %>%
# filter(date >= dateList[1] & date <= dateList[length(dateList)]) %>%
group_by(smoke, ct10) %>%
summarize(NumberOfDays = length(date)) %>%
ungroup() %>%
spread(key = smoke,value = NumberOfDays) %>%
rename(light = "Smoke (Light)",
medium = "Smoke (Medium)",
heavy = "Smoke (Heavy)")
View(HMLwide)
runApp()
